{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { getAllPizzasReducer, addPizzaReducer, getPizzaByIdReducer, editPizzaReducer } from \"./reducers/pizzaReducers\";\nimport { cartReducer } from \"./reducers/cartReducer\";\nimport { loginUserReducer, registerUserReducer, getAllUsersReducer } from \"./reducers/userReducer\";\nimport { placeOrderReducer, getUserOrdersReducer, getAllOrdersReducer } from \"./reducers/orderReducer\";\nconst finalReducer = combineReducers({\n  getAllPizzasReducer: getAllPizzasReducer,\n  cartReducer: cartReducer,\n  registerUserReducer: registerUserReducer,\n  loginUserReducer: loginUserReducer,\n  placeOrderReducer: placeOrderReducer,\n  getUserOrdersReducer: getUserOrdersReducer,\n  addPizzaReducer: addPizzaReducer,\n  getPizzaByIdReducer: getPizzaByIdReducer,\n  editPizzaReducer: editPizzaReducer,\n  getAllOrdersReducer: getAllOrdersReducer,\n  getAllUsersReducer: getAllUsersReducer\n});\nconst cartItems = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconst currentUser = localStorage.getItem(\"currentUser\") ? JSON.parse(localStorage.getItem(\"currentUser\")) : null;\nconst initialState = {\n  cartReducer: {\n    cartItems: cartItems\n  },\n  loginUserReducer: {\n    currentUser: currentUser\n  }\n};\nconst composeEnhancers = composeWithDevTools({});\nconst store = createStore(finalReducer, initialState, composeEnhancers(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"names":["combineReducers","createStore","applyMiddleware","thunk","composeWithDevTools","getAllPizzasReducer","addPizzaReducer","getPizzaByIdReducer","editPizzaReducer","cartReducer","loginUserReducer","registerUserReducer","getAllUsersReducer","placeOrderReducer","getUserOrdersReducer","getAllOrdersReducer","finalReducer","cartItems","localStorage","getItem","JSON","parse","currentUser","initialState","composeEnhancers","store"],"sources":["C:/Users/suren/Desktop/Pizza-Delivery/frontend/src/store.js"],"sourcesContent":["import { combineReducers } from \"redux\";\r\n\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  getAllPizzasReducer,\r\n  addPizzaReducer,\r\n  getPizzaByIdReducer,\r\n  editPizzaReducer,\r\n} from \"./reducers/pizzaReducers\";\r\nimport { cartReducer } from \"./reducers/cartReducer\";\r\nimport {\r\n  loginUserReducer,\r\n  registerUserReducer,\r\n  getAllUsersReducer,\r\n} from \"./reducers/userReducer\";\r\nimport {\r\n  placeOrderReducer,\r\n  getUserOrdersReducer,\r\n  getAllOrdersReducer,\r\n} from \"./reducers/orderReducer\";\r\n\r\nconst finalReducer = combineReducers({\r\n  getAllPizzasReducer: getAllPizzasReducer,\r\n  cartReducer: cartReducer,\r\n  registerUserReducer: registerUserReducer,\r\n  loginUserReducer: loginUserReducer,\r\n  placeOrderReducer: placeOrderReducer,\r\n  getUserOrdersReducer: getUserOrdersReducer,\r\n  addPizzaReducer: addPizzaReducer,\r\n  getPizzaByIdReducer: getPizzaByIdReducer,\r\n  editPizzaReducer: editPizzaReducer,\r\n  getAllOrdersReducer: getAllOrdersReducer,\r\n  getAllUsersReducer: getAllUsersReducer,\r\n});\r\n\r\nconst cartItems = localStorage.getItem(\"cartItems\")\r\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n  : [];\r\n\r\nconst currentUser = localStorage.getItem(\"currentUser\")\r\n  ? JSON.parse(localStorage.getItem(\"currentUser\"))\r\n  : null;\r\n\r\nconst initialState = {\r\n  cartReducer: {\r\n    cartItems: cartItems,\r\n  },\r\n  loginUserReducer: {\r\n    currentUser: currentUser,\r\n  },\r\n};\r\n\r\nconst composeEnhancers = composeWithDevTools({});\r\n\r\nconst store = createStore(\r\n  finalReducer,\r\n  initialState,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,OAAO;AAEvC,SAASC,WAAW,EAAEC,eAAe,QAAQ,OAAO;AACpD,OAAOC,KAAK,MAAM,aAAa;AAE/B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SACEC,mBAAmB,EACnBC,eAAe,EACfC,mBAAmB,EACnBC,gBAAgB,QACX,0BAA0B;AACjC,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SACEC,gBAAgB,EAChBC,mBAAmB,EACnBC,kBAAkB,QACb,wBAAwB;AAC/B,SACEC,iBAAiB,EACjBC,oBAAoB,EACpBC,mBAAmB,QACd,yBAAyB;AAEhC,MAAMC,YAAY,GAAGhB,eAAe,CAAC;EACnCK,mBAAmB,EAAEA,mBAAmB;EACxCI,WAAW,EAAEA,WAAW;EACxBE,mBAAmB,EAAEA,mBAAmB;EACxCD,gBAAgB,EAAEA,gBAAgB;EAClCG,iBAAiB,EAAEA,iBAAiB;EACpCC,oBAAoB,EAAEA,oBAAoB;EAC1CR,eAAe,EAAEA,eAAe;EAChCC,mBAAmB,EAAEA,mBAAmB;EACxCC,gBAAgB,EAAEA,gBAAgB;EAClCO,mBAAmB,EAAEA,mBAAmB;EACxCH,kBAAkB,EAAEA;AACtB,CAAC,CAAC;AAEF,MAAMK,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,GAC/CC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,GAC7C,EAAE;AAEN,MAAMG,WAAW,GAAGJ,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,GACnDC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC,GAC/C,IAAI;AAER,MAAMI,YAAY,GAAG;EACnBd,WAAW,EAAE;IACXQ,SAAS,EAAEA;EACb,CAAC;EACDP,gBAAgB,EAAE;IAChBY,WAAW,EAAEA;EACf;AACF,CAAC;AAED,MAAME,gBAAgB,GAAGpB,mBAAmB,CAAC,CAAC,CAAC,CAAC;AAEhD,MAAMqB,KAAK,GAAGxB,WAAW,CACvBe,YAAY,EACZO,YAAY,EACZC,gBAAgB,CAACtB,eAAe,CAACC,KAAK,CAAC,CACzC,CAAC;AAED,eAAesB,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}