{"ast":null,"code":"import axios from \"axios\";\nimport { API_ENDPOINT } from \"../utils/api\";\nimport cookie from \"js-cookie\";\nimport { toast } from \"react-toastify\";\nexport const userLoginAction = user => dispatch => {\n  dispatch({\n    type: \"USER_LOGIN_REQUEST\"\n  });\n  axios.post(`${API_ENDPOINT}/users/login`, user).then(res => {\n    dispatch({\n      type: \"USER_LOGIN_SUCCESS\",\n      payload: res.data.user\n    });\n    res.data.user._id = undefined;\n    res.data.user.__v = undefined;\n    res.data.user.isadmin = undefined;\n    localStorage.setItem(\"user\", JSON.stringify(res.data.user));\n    cookie.set(\"jwt\", res.data.token);\n  }).catch(err => {\n    dispatch({\n      type: \"USER_LOGIN_FAILED\"\n    });\n    toast.error(err.response.data.message);\n  });\n};\nexport const userLogOutAction = () => dispatch => {\n  dispatch({\n    type: \"USER_LOGOUT\"\n  });\n  localStorage.removeItem(\"user\");\n  cookie.remove(\"jwt\");\n};\nexport const userSignUpAction = user => dispatch => {\n  dispatch({\n    type: \"USER_SIGNUP_REQUEST\"\n  });\n  axios.post(`${API_ENDPOINT}/users/signup`, user).then(() => {\n    toast.success(\"User Registered, please login with your registered email\");\n    dispatch({\n      type: \"USER_SIGNUP_SUCCESS\"\n    });\n  }).catch(err => {\n    toast.error(err.response.data.message);\n    dispatch({\n      type: \"USER_SIGNUP_FAILED\"\n    });\n  });\n  dispatch({\n    type: \"USER_SIGNUP_COMPLETED\"\n  });\n};\nexport const userEditAction = (token, name, email) => dispatch => {\n  dispatch({\n    type: \"USER_EDIT_REQUEST\"\n  });\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  axios.patch(`${API_ENDPOINT}/users/`, {\n    name,\n    email\n  }, config).then(res => {\n    toast.success(\"User data changed\");\n    dispatch({\n      type: \"USER_EDIT_REQUEST_SUCCESS\",\n      payload: res.data.user\n    });\n    res.data.user._id = undefined;\n    res.data.user.__v = undefined;\n    res.data.user.isadmin = undefined;\n    localStorage.setItem(\"user\", JSON.stringify(res.data.user));\n  }).catch(err => {\n    toast.error(err.response.data.message);\n    dispatch({\n      type: \"USER_EDIT_REQUEST_FAILED\"\n    });\n  });\n};\nexport const changeUserPasswordAction = (token, oldPassword, newPassword) => dispatch => {\n  dispatch({\n    type: \"USER_PASSWORD_CHANGE_REQUEST\"\n  });\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  axios.patch(`${API_ENDPOINT}/users/changepassword`, {\n    oldPassword,\n    newPassword\n  }, config).then(() => {\n    toast.success(\"Password Changed Success\");\n    dispatch({\n      type: \"USER_PASSWORD_CHANGE_REQUEST_SUCCESS\"\n    });\n  }).catch(err => {\n    toast.error(err.response.data.message);\n    dispatch({\n      type: \"USER_PASSWORD_CHANGE_REQUEST_FAILED\"\n    });\n  });\n};","map":{"version":3,"names":["axios","API_ENDPOINT","cookie","toast","userLoginAction","user","dispatch","type","post","then","res","payload","data","_id","undefined","__v","isadmin","localStorage","setItem","JSON","stringify","set","token","catch","err","error","response","message","userLogOutAction","removeItem","remove","userSignUpAction","success","userEditAction","name","email","config","headers","Authorization","patch","changeUserPasswordAction","oldPassword","newPassword"],"sources":["C:/Users/suren/Desktop/Pizza-Delivery/client/src/actions/userActions.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { API_ENDPOINT } from \"../utils/api\";\r\nimport cookie from \"js-cookie\";\r\nimport { toast } from \"react-toastify\";\r\nexport const userLoginAction = (user) => (dispatch) => {\r\n  dispatch({\r\n    type: \"USER_LOGIN_REQUEST\",\r\n  });\r\n  axios\r\n    .post(`${API_ENDPOINT}/users/login`, user)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: \"USER_LOGIN_SUCCESS\",\r\n        payload: res.data.user,\r\n      });\r\n      res.data.user._id = undefined;\r\n      res.data.user.__v = undefined;\r\n      res.data.user.isadmin = undefined;\r\n      localStorage.setItem(\"user\", JSON.stringify(res.data.user));\r\n      cookie.set(\"jwt\", res.data.token);\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: \"USER_LOGIN_FAILED\",\r\n      });\r\n      toast.error(err.response.data.message);\r\n    });\r\n};\r\nexport const userLogOutAction = () => (dispatch) => {\r\n  dispatch({\r\n    type: \"USER_LOGOUT\",\r\n  });\r\n  localStorage.removeItem(\"user\");\r\n  cookie.remove(\"jwt\");\r\n};\r\n\r\nexport const userSignUpAction = (user) => (dispatch) => {\r\n  dispatch({\r\n    type: \"USER_SIGNUP_REQUEST\",\r\n  });\r\n  axios\r\n    .post(`${API_ENDPOINT}/users/signup`, user)\r\n    .then(() => {\r\n      toast.success(\"User Registered, please login with your registered email\");\r\n      dispatch({\r\n        type: \"USER_SIGNUP_SUCCESS\",\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      toast.error(err.response.data.message);\r\n      dispatch({\r\n        type: \"USER_SIGNUP_FAILED\",\r\n      });\r\n    });\r\n  dispatch({\r\n    type: \"USER_SIGNUP_COMPLETED\",\r\n  });\r\n};\r\n\r\nexport const userEditAction = (token, name, email) => (dispatch) => {\r\n  dispatch({\r\n    type: \"USER_EDIT_REQUEST\",\r\n  });\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n  axios\r\n    .patch(`${API_ENDPOINT}/users/`, { name, email }, config)\r\n    .then((res) => {\r\n      toast.success(\"User data changed\");\r\n      dispatch({\r\n        type: \"USER_EDIT_REQUEST_SUCCESS\",\r\n        payload: res.data.user,\r\n      });\r\n      res.data.user._id = undefined;\r\n      res.data.user.__v = undefined;\r\n      res.data.user.isadmin = undefined;\r\n      localStorage.setItem(\"user\", JSON.stringify(res.data.user));\r\n    })\r\n    .catch((err) => {\r\n      toast.error(err.response.data.message);\r\n      dispatch({\r\n        type: \"USER_EDIT_REQUEST_FAILED\",\r\n      });\r\n    });\r\n};\r\n\r\nexport const changeUserPasswordAction =\r\n  (token, oldPassword, newPassword) => (dispatch) => {\r\n    dispatch({\r\n      type: \"USER_PASSWORD_CHANGE_REQUEST\",\r\n    });\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    axios\r\n      .patch(\r\n        `${API_ENDPOINT}/users/changepassword`,\r\n        { oldPassword, newPassword },\r\n        config\r\n      )\r\n      .then(() => {\r\n        toast.success(\"Password Changed Success\");\r\n        dispatch({\r\n          type: \"USER_PASSWORD_CHANGE_REQUEST_SUCCESS\",\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        toast.error(err.response.data.message);\r\n        dispatch({\r\n          type: \"USER_PASSWORD_CHANGE_REQUEST_FAILED\",\r\n        });\r\n      });\r\n  };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}