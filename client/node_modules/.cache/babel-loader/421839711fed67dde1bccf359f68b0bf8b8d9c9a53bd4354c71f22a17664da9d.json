{"ast":null,"code":"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { API_ENDPOINT } from \"../utils/api\";\nexport const forgotPasswordAction = email => dispatch => {\n  dispatch({\n    type: \"FORGOT_PASSWORD_REQUEST\"\n  });\n  axios.post(`${API_ENDPOINT}/users/forgotpassword`, {\n    email\n  }).then(res => {\n    toast.info(res.data.message);\n    dispatch({\n      type: \"FORGOT_PASSWORD_REQUEST_SUCCESS\"\n    });\n  }).catch(err => {\n    toast.error(err.response.data.message);\n    dispatch({\n      type: \"FORGOT_PASSWORD_REQUEST_FAILED\"\n    });\n  });\n};\nexport const resetPasswordAction = (newPassword, otp) => dispatch => {\n  dispatch({\n    type: \"RESET_PASSWORD_REQUEST\"\n  });\n  axios.post(`${API_ENDPOINT}/users/resetpassword`, {\n    newPassword,\n    OTP: otp\n  }).then(data => {\n    toast.success(\"Login using your new password\");\n    dispatch({\n      type: \"RESET_PASSWORD_REQUEST_SUCCESS\"\n    });\n  }).catch(err => {\n    toast.error(err.response.data.message);\n    dispatch({\n      type: \"RESET_PASSWORD_REQUEST_FAILED\"\n    });\n  });\n  dispatch({\n    type: \"RESET_PASSWORD_REQUEST_COMPLETED\"\n  });\n};","map":{"version":3,"names":["axios","toast","API_ENDPOINT","forgotPasswordAction","email","dispatch","type","post","then","res","info","data","message","catch","err","error","response","resetPasswordAction","newPassword","otp","OTP","success"],"sources":["C:/Users/suren/Desktop/Pizza-Delivery/client/src/actions/passwordResetActions.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { API_ENDPOINT } from \"../utils/api\";\r\nexport const forgotPasswordAction = (email) => (dispatch) => {\r\n  dispatch({\r\n    type: \"FORGOT_PASSWORD_REQUEST\",\r\n  });\r\n  axios\r\n    .post(`${API_ENDPOINT}/users/forgotpassword`, {\r\n      email,\r\n    })\r\n    .then((res) => {\r\n      toast.info(res.data.message);\r\n      dispatch({\r\n        type: \"FORGOT_PASSWORD_REQUEST_SUCCESS\",\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      toast.error(err.response.data.message);\r\n      dispatch({\r\n        type: \"FORGOT_PASSWORD_REQUEST_FAILED\",\r\n      });\r\n    });\r\n};\r\n\r\nexport const resetPasswordAction = (newPassword, otp) => (dispatch) => {\r\n  dispatch({\r\n    type: \"RESET_PASSWORD_REQUEST\",\r\n  });\r\n  axios\r\n    .post(`${API_ENDPOINT}/users/resetpassword`, { newPassword, OTP: otp })\r\n    .then((data) => {\r\n      toast.success(\"Login using your new password\");\r\n      dispatch({\r\n        type: \"RESET_PASSWORD_REQUEST_SUCCESS\",\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      toast.error(err.response.data.message);\r\n      dispatch({\r\n        type: \"RESET_PASSWORD_REQUEST_FAILED\",\r\n      });\r\n    });\r\n  dispatch({ type: \"RESET_PASSWORD_REQUEST_COMPLETED\" });\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAASC,YAAY,QAAQ,cAAc;AAC3C,OAAO,MAAMC,oBAAoB,GAAIC,KAAK,IAAMC,QAAQ,IAAK;EAC3DA,QAAQ,CAAC;IACPC,IAAI,EAAE;EACR,CAAC,CAAC;EACFN,KAAK,CACFO,IAAI,CAAE,GAAEL,YAAa,uBAAsB,EAAE;IAC5CE;EACF,CAAC,CAAC,CACDI,IAAI,CAAEC,GAAG,IAAK;IACbR,KAAK,CAACS,IAAI,CAACD,GAAG,CAACE,IAAI,CAACC,OAAO,CAAC;IAC5BP,QAAQ,CAAC;MACPC,IAAI,EAAE;IACR,CAAC,CAAC;EACJ,CAAC,CAAC,CACDO,KAAK,CAAEC,GAAG,IAAK;IACdb,KAAK,CAACc,KAAK,CAACD,GAAG,CAACE,QAAQ,CAACL,IAAI,CAACC,OAAO,CAAC;IACtCP,QAAQ,CAAC;MACPC,IAAI,EAAE;IACR,CAAC,CAAC;EACJ,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMW,mBAAmB,GAAGA,CAACC,WAAW,EAAEC,GAAG,KAAMd,QAAQ,IAAK;EACrEA,QAAQ,CAAC;IACPC,IAAI,EAAE;EACR,CAAC,CAAC;EACFN,KAAK,CACFO,IAAI,CAAE,GAAEL,YAAa,sBAAqB,EAAE;IAAEgB,WAAW;IAAEE,GAAG,EAAED;EAAI,CAAC,CAAC,CACtEX,IAAI,CAAEG,IAAI,IAAK;IACdV,KAAK,CAACoB,OAAO,CAAC,+BAA+B,CAAC;IAC9ChB,QAAQ,CAAC;MACPC,IAAI,EAAE;IACR,CAAC,CAAC;EACJ,CAAC,CAAC,CACDO,KAAK,CAAEC,GAAG,IAAK;IACdb,KAAK,CAACc,KAAK,CAACD,GAAG,CAACE,QAAQ,CAACL,IAAI,CAACC,OAAO,CAAC;IACtCP,QAAQ,CAAC;MACPC,IAAI,EAAE;IACR,CAAC,CAAC;EACJ,CAAC,CAAC;EACJD,QAAQ,CAAC;IAAEC,IAAI,EAAE;EAAmC,CAAC,CAAC;AACxD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}