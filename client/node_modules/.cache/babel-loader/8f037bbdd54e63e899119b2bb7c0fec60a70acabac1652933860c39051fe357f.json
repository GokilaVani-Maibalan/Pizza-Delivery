{"ast":null,"code":"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { API_ENDPOINT } from \"../utils/api\";\nexport const addReviewAction = (token, text, pizza, rating) => dispatch => {\n  dispatch({\n    type: \"ADD_REVIEW_REQUEST\"\n  });\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  axios.post(`${API_ENDPOINT}/reviews/`, {\n    text,\n    pizza,\n    rating\n  }, config).then(() => {\n    toast.success(\"Review added\");\n    dispatch({\n      type: \"ADD_REVIEW_REQUEST_SUCCESS\"\n    });\n  }).catch(err => {\n    toast.error(err.response.data.message);\n    dispatch({\n      type: \"ADD_REVIEW_REQUEST_FAILED\"\n    });\n  });\n};\nexport const getReviewAction = token => dispatch => {\n  dispatch({\n    type: \"GET_REVIEWS_REQUEST\"\n  });\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  axios.get(`${API_ENDPOINT}/reviews/`, config).then(res => {\n    dispatch({\n      type: \"GET_REVIEWS_REQUEST_SUCCESS\",\n      payload: res.data.reviews\n    });\n  }).catch(err => {\n    toast.error(err.response.data.message);\n    dispatch({\n      type: \"GET_REVIEWS_REQUEST_FAILED\"\n    });\n  });\n};\nexport const deleteReviewAction = (token, id) => (dispatch, getState) => {\n  const {\n    reviews\n  } = getState().userReviewReducer;\n  dispatch({\n    type: \"DELETE_REVIEW_REQUEST\"\n  });\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  axios.delete(`${API_ENDPOINT}/reviews/${id}`, config).then(() => {\n    const newReviews = reviews.filter(r => r._id !== id);\n    dispatch({\n      type: \"DELETE_REVIEW_REQUEST_SUCCESS\",\n      payload: newReviews\n    });\n  }).catch(err => {\n    toast.error(err.response.data.message);\n    dispatch({\n      type: \"DELETE_REVIEW_REQUEST_FAILED\"\n    });\n  });\n};\nexport const editReviewAction = (token, id, text, rating) => (dispatch, getState) => {\n  let {\n    reviews\n  } = getState().userReviewReducer;\n  dispatch({\n    type: \"EDIT_REVIEW_REQUEST\"\n  });\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  axios.patch(`${API_ENDPOINT}/reviews/`, {\n    id,\n    text,\n    rating\n  }, config).then(res => {\n    const index = reviews.findIndex(r => r._id === id);\n    const newReview = res.data.review;\n    let newReviews = [...reviews];\n    newReviews[index] = newReview;\n    dispatch({\n      type: \"EDIT_REVIEW_REQUEST_SUCCESS\",\n      payload: newReviews\n    });\n  }).catch(err => {\n    toast.error(err.response.data.message);\n    dispatch({\n      type: \"EDIT_REVIEW_REQUEST_FAILED\"\n    });\n  });\n};","map":{"version":3,"names":["axios","toast","API_ENDPOINT","addReviewAction","token","text","pizza","rating","dispatch","type","config","headers","Authorization","post","then","success","catch","err","error","response","data","message","getReviewAction","get","res","payload","reviews","deleteReviewAction","id","getState","userReviewReducer","delete","newReviews","filter","r","_id","editReviewAction","patch","index","findIndex","newReview","review"],"sources":["C:/Users/suren/Desktop/Pizza-Delivery/client/src/actions/userReviewAction.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { API_ENDPOINT } from \"../utils/api\";\r\n\r\nexport const addReviewAction = (token, text, pizza, rating) => (dispatch) => {\r\n  dispatch({\r\n    type: \"ADD_REVIEW_REQUEST\",\r\n  });\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n  axios\r\n    .post(`${API_ENDPOINT}/reviews/`, { text, pizza, rating }, config)\r\n    .then(() => {\r\n      toast.success(\"Review added\");\r\n      dispatch({\r\n        type: \"ADD_REVIEW_REQUEST_SUCCESS\",\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      toast.error(err.response.data.message);\r\n      dispatch({\r\n        type: \"ADD_REVIEW_REQUEST_FAILED\",\r\n      });\r\n    });\r\n};\r\n\r\nexport const getReviewAction = (token) => (dispatch) => {\r\n  dispatch({\r\n    type: \"GET_REVIEWS_REQUEST\",\r\n  });\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n  axios\r\n    .get(`${API_ENDPOINT}/reviews/`, config)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: \"GET_REVIEWS_REQUEST_SUCCESS\",\r\n        payload: res.data.reviews,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      toast.error(err.response.data.message);\r\n      dispatch({\r\n        type: \"GET_REVIEWS_REQUEST_FAILED\",\r\n      });\r\n    });\r\n};\r\n\r\nexport const deleteReviewAction = (token, id) => (dispatch, getState) => {\r\n  const { reviews } = getState().userReviewReducer;\r\n  dispatch({\r\n    type: \"DELETE_REVIEW_REQUEST\",\r\n  });\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n  axios\r\n    .delete(`${API_ENDPOINT}/reviews/${id}`, config)\r\n    .then(() => {\r\n      const newReviews = reviews.filter((r) => r._id !== id);\r\n      dispatch({\r\n        type: \"DELETE_REVIEW_REQUEST_SUCCESS\",\r\n        payload: newReviews,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      toast.error(err.response.data.message);\r\n      dispatch({\r\n        type: \"DELETE_REVIEW_REQUEST_FAILED\",\r\n      });\r\n    });\r\n};\r\n\r\nexport const editReviewAction =\r\n  (token, id, text, rating) => (dispatch, getState) => {\r\n    let { reviews } = getState().userReviewReducer;\r\n    dispatch({\r\n      type: \"EDIT_REVIEW_REQUEST\",\r\n    });\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    axios\r\n      .patch(`${API_ENDPOINT}/reviews/`, { id, text, rating }, config)\r\n      .then((res) => {\r\n        const index = reviews.findIndex((r) => r._id === id);\r\n        const newReview = res.data.review;\r\n        let newReviews = [...reviews];\r\n        newReviews[index] = newReview;\r\n        dispatch({\r\n          type: \"EDIT_REVIEW_REQUEST_SUCCESS\",\r\n          payload: newReviews,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        toast.error(err.response.data.message);\r\n        dispatch({\r\n          type: \"EDIT_REVIEW_REQUEST_FAILED\",\r\n        });\r\n      });\r\n  };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}